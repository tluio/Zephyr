/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   qemu_x86.dts.pre.tmp
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 */

/* Nodes in dependency order (ordinal : path): */
/* 0 : / */
/* 1 : /aliases */
/* 2 : /chosen */
/* 3 : /cpus */
/* 4 : /cpus/cpu@0 */
/* 5 : /flash@500000 */
/* 6 : /memory@100000 */
/* 7 : /sim_flash */
/* 8 : /sim_flash/flash_sim@0 */
/* 9 : /sim_flash/flash_sim@0/partitions */
/* 10 : /sim_flash/flash_sim@0/partitions/partition@1000 */
/* 11 : /sim_flash/flash_sim@0/partitions/partition@11000 */
/* 12 : /sim_flash/flash_sim@0/partitions/partition@21000 */
/* 13 : /ioapic@fec00000 */
/* 14 : /soc */
/* 15 : /soc/eth@febc0000 */
/* 16 : /soc/hpet@fed00000 */
/* 17 : /soc/uart@2f8 */
/* 18 : /soc/uart@3f8 */

/*
 * Devicetree node:
 *   /ioapic@fec00000
 *
 * Binding (compatible = intel,ioapic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/intel,ioapic.yaml
 *
 * Dependency Ordinal: 13
 *
 * Requires:
 *   0 /
 *
 * Supports:
 *   15 /soc/eth@febc0000
 *   16 /soc/hpet@fed00000
 *   17 /soc/uart@2f8
 *   18 /soc/uart@3f8
 *
 * Description:
 *   This binding describes the Intel I/O Advanced Programmable Interrupt
 *   controller
 */
#define DT_INTEL_IOAPIC_FEC00000_BASE_ADDRESS       0xfec00000
#define DT_INST_0_INTEL_IOAPIC_BASE_ADDRESS         DT_INTEL_IOAPIC_FEC00000_BASE_ADDRESS
#define DT_INTEL_IOAPIC_FEC00000_SIZE               4096
#define DT_INST_0_INTEL_IOAPIC_SIZE                 DT_INTEL_IOAPIC_FEC00000_SIZE
#define DT_INST_0_INTEL_IOAPIC                      1

/*
 * Devicetree node:
 *   /memory@100000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * Dependency Ordinal: 6
 *
 * Requires:
 *   0 /
 *
 * Description:
 *   This binding gives a generic on-chip SRAM description
 */
#define DT_MMIO_SRAM_100000_BASE_ADDRESS            0x100000
#define DT_INST_0_MMIO_SRAM_BASE_ADDRESS            DT_MMIO_SRAM_100000_BASE_ADDRESS
#define DT_MMIO_SRAM_100000_SIZE                    4194304
#define DT_INST_0_MMIO_SRAM_SIZE                    DT_MMIO_SRAM_100000_SIZE
#define DT_INST_0_MMIO_SRAM                         1

/*
 * Devicetree node:
 *   /soc/uart@3f8
 *
 * Binding (compatible = ns16550):
 *   $ZEPHYR_BASE/dts/bindings/serial/ns16550.yaml
 *
 * Dependency Ordinal: 18
 *
 * Requires:
 *   13 /ioapic@fec00000
 *   14 /soc
 *
 * Description:
 *   This binding gives a base representation of the ns16550 UART
 */
#define DT_NS16550_3F8_BASE_ADDRESS                 0x3f8
#define DT_ALIAS_UART_0_BASE_ADDRESS                DT_NS16550_3F8_BASE_ADDRESS
#define DT_NS16550_UART_0_BASE_ADDRESS              DT_NS16550_3F8_BASE_ADDRESS
#define DT_INST_0_NS16550_BASE_ADDRESS              DT_NS16550_3F8_BASE_ADDRESS
#define DT_NS16550_3F8_SIZE                         256
#define DT_ALIAS_UART_0_SIZE                        DT_NS16550_3F8_SIZE
#define DT_NS16550_UART_0_SIZE                      DT_NS16550_3F8_SIZE
#define DT_INST_0_NS16550_SIZE                      DT_NS16550_3F8_SIZE
#define DT_NS16550_3F8_IRQ_0                        4
#define DT_ALIAS_UART_0_IRQ_0                       DT_NS16550_3F8_IRQ_0
#define DT_NS16550_UART_0_IRQ_0                     DT_NS16550_3F8_IRQ_0
#define DT_INST_0_NS16550_IRQ_0                     DT_NS16550_3F8_IRQ_0
#define DT_NS16550_3F8_IRQ_0_SENSE                  0
#define DT_ALIAS_UART_0_IRQ_0_SENSE                 DT_NS16550_3F8_IRQ_0_SENSE
#define DT_NS16550_UART_0_IRQ_0_SENSE               DT_NS16550_3F8_IRQ_0_SENSE
#define DT_INST_0_NS16550_IRQ_0_SENSE               DT_NS16550_3F8_IRQ_0_SENSE
#define DT_NS16550_3F8_IRQ_0_PRIORITY               3
#define DT_ALIAS_UART_0_IRQ_0_PRIORITY              DT_NS16550_3F8_IRQ_0_PRIORITY
#define DT_NS16550_UART_0_IRQ_0_PRIORITY            DT_NS16550_3F8_IRQ_0_PRIORITY
#define DT_INST_0_NS16550_IRQ_0_PRIORITY            DT_NS16550_3F8_IRQ_0_PRIORITY
/* attached via PCI(e) bus */
#define DT_NS16550_3F8_PCIE                         0
#define DT_ALIAS_UART_0_PCIE                        DT_NS16550_3F8_PCIE
#define DT_NS16550_UART_0_PCIE                      DT_NS16550_3F8_PCIE
#define DT_INST_0_NS16550_PCIE                      DT_NS16550_3F8_PCIE
/* Clock frequency information for UART operation */
#define DT_NS16550_3F8_CLOCK_FREQUENCY              1843200
#define DT_ALIAS_UART_0_CLOCK_FREQUENCY             DT_NS16550_3F8_CLOCK_FREQUENCY
#define DT_NS16550_UART_0_CLOCK_FREQUENCY           DT_NS16550_3F8_CLOCK_FREQUENCY
#define DT_INST_0_NS16550_CLOCK_FREQUENCY           DT_NS16550_3F8_CLOCK_FREQUENCY
/* Initial baud rate setting for UART */
#define DT_NS16550_3F8_CURRENT_SPEED                115200
#define DT_ALIAS_UART_0_CURRENT_SPEED               DT_NS16550_3F8_CURRENT_SPEED
#define DT_NS16550_UART_0_CURRENT_SPEED             DT_NS16550_3F8_CURRENT_SPEED
#define DT_INST_0_NS16550_CURRENT_SPEED             DT_NS16550_3F8_CURRENT_SPEED
/* Human readable string describing the device (used by Zephyr for API name) */
#define DT_NS16550_3F8_LABEL                        "UART_0"
#define DT_ALIAS_UART_0_LABEL                       DT_NS16550_3F8_LABEL
#define DT_NS16550_UART_0_LABEL                     DT_NS16550_3F8_LABEL
#define DT_INST_0_NS16550_LABEL                     DT_NS16550_3F8_LABEL
/* Set to enable RTS/CTS flow control at boot time */
#define DT_NS16550_3F8_HW_FLOW_CONTROL              0
#define DT_ALIAS_UART_0_HW_FLOW_CONTROL             DT_NS16550_3F8_HW_FLOW_CONTROL
#define DT_NS16550_UART_0_HW_FLOW_CONTROL           DT_NS16550_3F8_HW_FLOW_CONTROL
#define DT_INST_0_NS16550_HW_FLOW_CONTROL           DT_NS16550_3F8_HW_FLOW_CONTROL
#define DT_INST_0_NS16550                           1

/*
 * Devicetree node:
 *   /soc/uart@2f8
 *
 * Binding (compatible = ns16550):
 *   $ZEPHYR_BASE/dts/bindings/serial/ns16550.yaml
 *
 * Dependency Ordinal: 17
 *
 * Requires:
 *   13 /ioapic@fec00000
 *   14 /soc
 *
 * Description:
 *   This binding gives a base representation of the ns16550 UART
 */
#define DT_NS16550_2F8_BASE_ADDRESS                 0x2f8
#define DT_ALIAS_UART_1_BASE_ADDRESS                DT_NS16550_2F8_BASE_ADDRESS
#define DT_NS16550_UART_1_BASE_ADDRESS              DT_NS16550_2F8_BASE_ADDRESS
#define DT_INST_1_NS16550_BASE_ADDRESS              DT_NS16550_2F8_BASE_ADDRESS
#define DT_NS16550_2F8_SIZE                         256
#define DT_ALIAS_UART_1_SIZE                        DT_NS16550_2F8_SIZE
#define DT_NS16550_UART_1_SIZE                      DT_NS16550_2F8_SIZE
#define DT_INST_1_NS16550_SIZE                      DT_NS16550_2F8_SIZE
#define DT_NS16550_2F8_IRQ_0                        3
#define DT_ALIAS_UART_1_IRQ_0                       DT_NS16550_2F8_IRQ_0
#define DT_NS16550_UART_1_IRQ_0                     DT_NS16550_2F8_IRQ_0
#define DT_INST_1_NS16550_IRQ_0                     DT_NS16550_2F8_IRQ_0
#define DT_NS16550_2F8_IRQ_0_SENSE                  0
#define DT_ALIAS_UART_1_IRQ_0_SENSE                 DT_NS16550_2F8_IRQ_0_SENSE
#define DT_NS16550_UART_1_IRQ_0_SENSE               DT_NS16550_2F8_IRQ_0_SENSE
#define DT_INST_1_NS16550_IRQ_0_SENSE               DT_NS16550_2F8_IRQ_0_SENSE
#define DT_NS16550_2F8_IRQ_0_PRIORITY               3
#define DT_ALIAS_UART_1_IRQ_0_PRIORITY              DT_NS16550_2F8_IRQ_0_PRIORITY
#define DT_NS16550_UART_1_IRQ_0_PRIORITY            DT_NS16550_2F8_IRQ_0_PRIORITY
#define DT_INST_1_NS16550_IRQ_0_PRIORITY            DT_NS16550_2F8_IRQ_0_PRIORITY
/* attached via PCI(e) bus */
#define DT_NS16550_2F8_PCIE                         0
#define DT_ALIAS_UART_1_PCIE                        DT_NS16550_2F8_PCIE
#define DT_NS16550_UART_1_PCIE                      DT_NS16550_2F8_PCIE
#define DT_INST_1_NS16550_PCIE                      DT_NS16550_2F8_PCIE
/* Clock frequency information for UART operation */
#define DT_NS16550_2F8_CLOCK_FREQUENCY              1843200
#define DT_ALIAS_UART_1_CLOCK_FREQUENCY             DT_NS16550_2F8_CLOCK_FREQUENCY
#define DT_NS16550_UART_1_CLOCK_FREQUENCY           DT_NS16550_2F8_CLOCK_FREQUENCY
#define DT_INST_1_NS16550_CLOCK_FREQUENCY           DT_NS16550_2F8_CLOCK_FREQUENCY
/* Initial baud rate setting for UART */
#define DT_NS16550_2F8_CURRENT_SPEED                115200
#define DT_ALIAS_UART_1_CURRENT_SPEED               DT_NS16550_2F8_CURRENT_SPEED
#define DT_NS16550_UART_1_CURRENT_SPEED             DT_NS16550_2F8_CURRENT_SPEED
#define DT_INST_1_NS16550_CURRENT_SPEED             DT_NS16550_2F8_CURRENT_SPEED
/* Human readable string describing the device (used by Zephyr for API name) */
#define DT_NS16550_2F8_LABEL                        "UART_1"
#define DT_ALIAS_UART_1_LABEL                       DT_NS16550_2F8_LABEL
#define DT_NS16550_UART_1_LABEL                     DT_NS16550_2F8_LABEL
#define DT_INST_1_NS16550_LABEL                     DT_NS16550_2F8_LABEL
/* Set to enable RTS/CTS flow control at boot time */
#define DT_NS16550_2F8_HW_FLOW_CONTROL              0
#define DT_ALIAS_UART_1_HW_FLOW_CONTROL             DT_NS16550_2F8_HW_FLOW_CONTROL
#define DT_NS16550_UART_1_HW_FLOW_CONTROL           DT_NS16550_2F8_HW_FLOW_CONTROL
#define DT_INST_1_NS16550_HW_FLOW_CONTROL           DT_NS16550_2F8_HW_FLOW_CONTROL
#define DT_INST_1_NS16550                           1

/*
 * Devicetree node:
 *   /soc/hpet@fed00000
 *
 * Binding (compatible = intel,hpet):
 *   $ZEPHYR_BASE/dts/bindings/timer/intel,hpet.yaml
 *
 * Dependency Ordinal: 16
 *
 * Requires:
 *   13 /ioapic@fec00000
 *   14 /soc
 *
 * Description:
 *   This binding represents the High-Precision Event Timer
 */
#define DT_INTEL_HPET_FED00000_BASE_ADDRESS         0xfed00000
#define DT_INST_0_INTEL_HPET_BASE_ADDRESS           DT_INTEL_HPET_FED00000_BASE_ADDRESS
#define DT_INTEL_HPET_FED00000_SIZE                 1024
#define DT_INST_0_INTEL_HPET_SIZE                   DT_INTEL_HPET_FED00000_SIZE
#define DT_INTEL_HPET_FED00000_IRQ_0                2
#define DT_INST_0_INTEL_HPET_IRQ_0                  DT_INTEL_HPET_FED00000_IRQ_0
#define DT_INTEL_HPET_FED00000_IRQ_0_SENSE          0
#define DT_INST_0_INTEL_HPET_IRQ_0_SENSE            DT_INTEL_HPET_FED00000_IRQ_0_SENSE
#define DT_INTEL_HPET_FED00000_IRQ_0_PRIORITY       4
#define DT_INST_0_INTEL_HPET_IRQ_0_PRIORITY         DT_INTEL_HPET_FED00000_IRQ_0_PRIORITY
/* Human readable string describing the device (used by Zephyr for API name) */
#define DT_INTEL_HPET_FED00000_LABEL                "HPET"
#define DT_INST_0_INTEL_HPET_LABEL                  DT_INTEL_HPET_FED00000_LABEL
#define DT_INST_0_INTEL_HPET                        1

/*
 * Devicetree node:
 *   /soc/eth@febc0000
 *
 * Binding (compatible = intel,e1000):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/intel,e1000.yaml
 *
 * Dependency Ordinal: 15
 *
 * Requires:
 *   13 /ioapic@fec00000
 *   14 /soc
 *
 * Description:
 *   This is a representation of the Intel E1000 Ethernet controller
 */
#define DT_INTEL_E1000_FEBC0000_BASE_ADDRESS        0xfebc0000
#define DT_INST_0_INTEL_E1000_BASE_ADDRESS          DT_INTEL_E1000_FEBC0000_BASE_ADDRESS
#define DT_INTEL_E1000_FEBC0000_SIZE                256
#define DT_INST_0_INTEL_E1000_SIZE                  DT_INTEL_E1000_FEBC0000_SIZE
#define DT_INTEL_E1000_FEBC0000_IRQ_0               11
#define DT_INST_0_INTEL_E1000_IRQ_0                 DT_INTEL_E1000_FEBC0000_IRQ_0
#define DT_INTEL_E1000_FEBC0000_IRQ_0_SENSE         0
#define DT_INST_0_INTEL_E1000_IRQ_0_SENSE           DT_INTEL_E1000_FEBC0000_IRQ_0_SENSE
#define DT_INTEL_E1000_FEBC0000_IRQ_0_PRIORITY      3
#define DT_INST_0_INTEL_E1000_IRQ_0_PRIORITY        DT_INTEL_E1000_FEBC0000_IRQ_0_PRIORITY
/* Human readable string describing the device (used by Zephyr for API name) */
#define DT_INTEL_E1000_FEBC0000_LABEL               "eth0"
#define DT_INST_0_INTEL_E1000_LABEL                 DT_INTEL_E1000_FEBC0000_LABEL
#define DT_INST_0_INTEL_E1000                       1

/*
 * Devicetree node:
 *   /flash@500000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * Dependency Ordinal: 5
 *
 * Requires:
 *   0 /
 *
 * Description:
 *   This binding gives a base FLASH description
 */
#define DT_SOC_NV_FLASH_500000_BASE_ADDRESS         0x500000
#define DT_INST_0_SOC_NV_FLASH_BASE_ADDRESS         DT_SOC_NV_FLASH_500000_BASE_ADDRESS
#define DT_SOC_NV_FLASH_500000_SIZE                 4194304
#define DT_INST_0_SOC_NV_FLASH_SIZE                 DT_SOC_NV_FLASH_500000_SIZE
#define DT_INST_0_SOC_NV_FLASH                      1

/*
 * Devicetree node:
 *   /sim_flash
 *
 * Binding (compatible = zephyr,sim-flash):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/zephyr,sim-flash.yaml
 *
 * Dependency Ordinal: 7
 *
 * Requires:
 *   0 /
 *
 * Supports:
 *   8 /sim_flash/flash_sim@0
 *
 * Description:
 *   This binding gives a base representation of a simulated flash memory
 */
/* Human readable string describing the device (used by Zephyr for API name) */
#define DT_ZEPHYR_SIM_FLASH_SIM_FLASH_LABEL         "FLASH_SIMULATOR"
#define DT_INST_0_ZEPHYR_SIM_FLASH_LABEL            DT_ZEPHYR_SIM_FLASH_SIM_FLASH_LABEL
#define DT_INST_0_ZEPHYR_SIM_FLASH                  1

/*
 * Devicetree node:
 *   /sim_flash/flash_sim@0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * Dependency Ordinal: 8
 *
 * Requires:
 *   7 /sim_flash
 *
 * Supports:
 *   9 /sim_flash/flash_sim@0/partitions
 *
 * Description:
 *   This binding gives a base FLASH description
 */
#define DT_SOC_NV_FLASH_0_BASE_ADDRESS              0x0
#define DT_INST_1_SOC_NV_FLASH_BASE_ADDRESS         DT_SOC_NV_FLASH_0_BASE_ADDRESS
#define DT_SOC_NV_FLASH_0_SIZE                      1048576
#define DT_INST_1_SOC_NV_FLASH_SIZE                 DT_SOC_NV_FLASH_0_SIZE
/* address alignment required by flash erase operations */
#define DT_SOC_NV_FLASH_0_ERASE_BLOCK_SIZE          1024
#define DT_INST_1_SOC_NV_FLASH_ERASE_BLOCK_SIZE     DT_SOC_NV_FLASH_0_ERASE_BLOCK_SIZE
/* address alignment required by flash write operations */
#define DT_SOC_NV_FLASH_0_WRITE_BLOCK_SIZE          4
#define DT_INST_1_SOC_NV_FLASH_WRITE_BLOCK_SIZE     DT_SOC_NV_FLASH_0_WRITE_BLOCK_SIZE
#define DT_INST_1_SOC_NV_FLASH                      1

/* Active compatibles (mentioned in DTS + binding found) */
#define DT_COMPAT_INTEL_E1000                       1
#define DT_COMPAT_INTEL_HPET                        1
#define DT_COMPAT_INTEL_IOAPIC                      1
#define DT_COMPAT_MMIO_SRAM                         1
#define DT_COMPAT_NS16550                           1
#define DT_COMPAT_SOC_NV_FLASH                      1
#define DT_COMPAT_ZEPHYR_SIM_FLASH                  1

/* /chosen/zephyr,sram (/memory@100000) */
#define DT_SRAM_BASE_ADDRESS                        0x100000
#define DT_SRAM_SIZE                                4096

/* /chosen/zephyr,flash (/flash@500000) */
#define DT_FLASH_BASE_ADDRESS                       0x500000
#define DT_FLASH_SIZE                               4096

/* /chosen/zephyr,code-partition (/sim_flash/flash_sim@0/partitions/partition@11000) */
#define DT_CODE_PARTITION_OFFSET                    69632
#define DT_CODE_PARTITION_SIZE                      65536

/* Flash partition at /sim_flash/flash_sim@0/partitions/partition@1000 */
#define DT_FLASH_AREA_STORAGE_ID                    0
#define DT_FLASH_AREA_STORAGE_READ_ONLY             0
#define DT_FLASH_AREA_STORAGE_OFFSET_0              4096
#define DT_FLASH_AREA_STORAGE_OFFSET                DT_FLASH_AREA_STORAGE_OFFSET_0
#define DT_FLASH_AREA_STORAGE_SIZE_0                65536
#define DT_FLASH_AREA_STORAGE_SIZE                  DT_FLASH_AREA_STORAGE_SIZE_0
#define DT_FLASH_AREA_STORAGE_DEV                   "FLASH_SIMULATOR"
#define DT_FLASH_AREA_0_ID                          0
#define DT_FLASH_AREA_0_READ_ONLY                   0
#define DT_FLASH_AREA_0_OFFSET_0                    4096
#define DT_FLASH_AREA_0_OFFSET                      DT_FLASH_AREA_0_OFFSET_0
#define DT_FLASH_AREA_0_SIZE_0                      65536
#define DT_FLASH_AREA_0_SIZE                        DT_FLASH_AREA_0_SIZE_0
#define DT_FLASH_AREA_0_DEV                         "FLASH_SIMULATOR"

/* Flash partition at /sim_flash/flash_sim@0/partitions/partition@11000 */
#define DT_FLASH_AREA_IMAGE_0_ID                    1
#define DT_FLASH_AREA_IMAGE_0_READ_ONLY             0
#define DT_FLASH_AREA_IMAGE_0_OFFSET_0              69632
#define DT_FLASH_AREA_IMAGE_0_OFFSET                DT_FLASH_AREA_IMAGE_0_OFFSET_0
#define DT_FLASH_AREA_IMAGE_0_SIZE_0                65536
#define DT_FLASH_AREA_IMAGE_0_SIZE                  DT_FLASH_AREA_IMAGE_0_SIZE_0
#define DT_FLASH_AREA_IMAGE_0_DEV                   "FLASH_SIMULATOR"
#define DT_FLASH_AREA_1_ID                          1
#define DT_FLASH_AREA_1_READ_ONLY                   0
#define DT_FLASH_AREA_1_OFFSET_0                    69632
#define DT_FLASH_AREA_1_OFFSET                      DT_FLASH_AREA_1_OFFSET_0
#define DT_FLASH_AREA_1_SIZE_0                      65536
#define DT_FLASH_AREA_1_SIZE                        DT_FLASH_AREA_1_SIZE_0
#define DT_FLASH_AREA_1_DEV                         "FLASH_SIMULATOR"

/* Flash partition at /sim_flash/flash_sim@0/partitions/partition@21000 */
#define DT_FLASH_AREA_IMAGE_1_ID                    2
#define DT_FLASH_AREA_IMAGE_1_READ_ONLY             0
#define DT_FLASH_AREA_IMAGE_1_OFFSET_0              135168
#define DT_FLASH_AREA_IMAGE_1_OFFSET                DT_FLASH_AREA_IMAGE_1_OFFSET_0
#define DT_FLASH_AREA_IMAGE_1_SIZE_0                65536
#define DT_FLASH_AREA_IMAGE_1_SIZE                  DT_FLASH_AREA_IMAGE_1_SIZE_0
#define DT_FLASH_AREA_IMAGE_1_DEV                   "FLASH_SIMULATOR"
#define DT_FLASH_AREA_2_ID                          2
#define DT_FLASH_AREA_2_READ_ONLY                   0
#define DT_FLASH_AREA_2_OFFSET_0                    135168
#define DT_FLASH_AREA_2_OFFSET                      DT_FLASH_AREA_2_OFFSET_0
#define DT_FLASH_AREA_2_SIZE_0                      65536
#define DT_FLASH_AREA_2_SIZE                        DT_FLASH_AREA_2_SIZE_0
#define DT_FLASH_AREA_2_DEV                         "FLASH_SIMULATOR"

/* Number of flash partitions */
#define DT_FLASH_AREA_NUM                           3
